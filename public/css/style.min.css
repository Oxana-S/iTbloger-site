@-webkit-keyframes showBlock{0%{opacity:0}to{opacity:1}}@keyframes showBlock{0%{opacity:0}to{opacity:1}}body,html{height:100%}body{background:#ebebeb;font-family:"Montserrat",sans-serif;position:relative}header,main,nav{margin-bottom:50px}p{font-size:16px}.container{width:100%;background-color:#fff;border-radius:5px}.form-control:focus,:focus{outline:0!important;-webkit-box-shadow:none;box-shadow:none;border-color:none!important}.green-border{border:1px solid #548f5e;margin:3px;padding:3px}nav{position:relative}nav .head{width:100%}nav .head .head__wrap{width:100%;margin-top:0}nav .head .head__wrap .head__logo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;top:none;right:none}nav .head .head__logo svg{width:76px;height:76px;fill:#d2691e;cursor:pointer}nav .head .head__logo svg path{-webkit-transition:-webkit-transform 1s ease;-o-transition:transform 1s ease;transition:transform 1s ease;transition:transform 1s ease,-webkit-transform 1s ease;-webkit-transform-origin:28px 28px;-ms-transform-origin:28px 28px;transform-origin:28px 28px}nav .head .nav-link{font-weight:600;font-size:20px;color:#434343;padding:10px;-webkit-transition:background-color 600ms ease;-o-transition:background-color 600ms ease;transition:background-color 600ms ease}nav .head .nav-link:hover{background-color:#c5c5c5}.ani{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg)}.bg-nav{background-color:#979797}.hidden{display:none}.sticky{position:fixed;top:-13px;width:100%;z-index:10}.stickyColor{background:#c9d4a9;-webkit-transition:.3s;-o-transition:.3s;transition:.3s;border-radius:0;border-bottom:1px solid #434343}.header__titles{padding:50px 20px 50px 40px}.header__titles p{font-size:18px}.header__titles button{background:#d97c54;text-transform:uppercase;font-size:20px;border-radius:4px;color:#fff;font-weight:700;margin-top:50px;padding:20px 30px}.header__titles button:hover,main .news .news__cards a:hover{-webkit-transition:all .6s ease;-o-transition:all .6s ease;transition:all .6s ease}.header__titles button:hover{background:#d26233}.header__titles button:active{background:#8e4120}.header__img{padding:50px 50px 200px 30px}.header__img .img__block{width:300px;height:300px;border:5px solid #515151;overflow:hidden;margin:0 auto}.header__img .img__block img{width:150%;height:auto;margin:-60px 0 0 -60px}.bg-main{background-color:#ffc099}.b-show{-webkit-animation:showBlock 1s linear forwards;animation:showBlock 1s linear forwards}main .news__cards,main .notice__cards{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}main .news h2,main .notice h2{margin-top:30px;margin-bottom:40px}main .news .news__cards{background-color:#deffbe;padding:40px 15px 15px;margin-bottom:30px}main .news .news__cards .card{width:48%;margin-bottom:30px}main .news .news__cards .card .card__img{max-height:400px;overflow-y:hidden}.btn__news-more,main .news .news__cards a{padding:10px 20px;border-radius:4px;color:#fff}main .news .news__cards a{background:#a3db34;font-size:14px;font-weight:700;text-transform:lowercase;border:0}main .news .news__cards a:hover{background:#8ec423}main .news .news__cards a:active{background:#587a16}main .notice .notice__text{margin-bottom:20px;border:2px solid #000;border-radius:5px;padding:12px 20px;background-color:#b8860b;color:#ebebeb}main .notice .notice__cards{padding:20px;background-color:rgba(184,134,11,.4901960784)}main .notice .notice__cards a{background:#c99c9c;font-size:18px;padding:10px 20px;border-radius:4px;color:#fff;font-weight:700;text-transform:lowercase;border:0}.btn__news-more:hover,main .notice .notice__cards a:hover{-webkit-transition:all .6s ease;-o-transition:all .6s ease;transition:all .6s ease}main .notice .notice__cards a:hover{background:#bb8282}main .notice .notice__cards a:active{background:#955151}.btn__news-more{background:#cd5c5c;text-transform:uppercase;font-size:16px;width:250px;margin:0 auto 30px}.btn__news-more:hover{background:#c33d3d}.btn__news-more:active{background:#822828}.hide{display:none}.search__modal .search__body form .buttons,footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}footer p{text-align:center}.bg-footer{background-color:#363636;color:#fff!important}.hide__modal{display:none}.search__modal .search__body form input,.show__modal{display:block}.search__modal{position:fixed;top:0;left:0;z-index:100;width:100%;height:100vh;background-color:rgba(0,0,0,.8);color:#fff}.search__modal .search__close{cursor:pointer;float:right;padding:5px 10px}.search__modal .search__body{width:80%;margin-left:10%;margin-top:20%}.search__modal .search__body form{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.search__modal .search__body form .buttons button{margin:15px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */